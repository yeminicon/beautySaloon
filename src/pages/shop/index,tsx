import React, { useState, useEffect } from "react";


const dummyProducts = Array.from({ length: 300 }, (_, index) => ({
  id: index + 1,
  name: `Brow Product ${index + 1}`,
  category: ["Pencil", "Gel", "Powder"][Math.floor(Math.random() * 3)],
  price: (Math.random() * 50 + 10).toFixed(2),
  image: `https://via.placeholder.com/150?text=Brow+Product+${index + 1}`,
}));

const ShopPage = () => {
  const [searchTerm, setSearchTerm] = useState("");
  const [selectedCategory, setSelectedCategory] = useState("All");
  const [currentPage, setCurrentPage] = useState(1);
  const itemsPerPage = 10;

  // Handle search, filter, and pagination
  const filteredProducts = dummyProducts.filter((product) => {
    const matchesSearch = product.name.toLowerCase().includes(searchTerm.toLowerCase());
    const matchesCategory = selectedCategory === "All" || product.category === selectedCategory;
    return matchesSearch && matchesCategory;
  });

  const totalPages = Math.ceil(filteredProducts.length / itemsPerPage);

  const paginatedProducts = filteredProducts.slice(
    (currentPage - 1) * itemsPerPage,
    currentPage * itemsPerPage
  );

  // Reset page to 1 when search or filter changes
  useEffect(() => {
    setCurrentPage(1);
  }, [searchTerm, selectedCategory]);

  // Render Pagination
  const renderPagination = () => (
    <div className="flex justify-center mt-5">
      {Array.from({ length: totalPages }, (_, index) => (
        <button
          key={index}
          className={`px-4 py-2 mx-1 border rounded-lg ${index + 1 === currentPage ? "bg-blue-500 text-white" : ""}`}
          onClick={() => setCurrentPage(index + 1)}
        >
          {index + 1}
        </button>
      ))}
    </div>
  );

  return (
    <div className="container mx-auto p-5">
      <h1 className="text-3xl font-bold mb-5 text-center">Brow Products Shop</h1>

      {/* Search Bar */}
      <div className="flex justify-center mb-5">
        <input
          type="text"
          value={searchTerm}
          onChange={(e) => setSearchTerm(e.target.value)}
          placeholder="Search products..."
          className="border p-2 rounded-lg w-[300px]"
        />
      </div>

      {/* Filter By Category */}
      <div className="flex justify-center mb-5">
        <select
          value={selectedCategory}
          onChange={(e) => setSelectedCategory(e.target.value)}
          className="border p-2 rounded-lg w-[300px]"
        >
          <option value="All">All Categories</option>
          <option value="Pencil">Pencil</option>
          <option value="Gel">Gel</option>
          <option value="Powder">Powder</option>
        </select>
      </div>

      {/* Products List */}
      <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-5">
        {paginatedProducts.map((product) => (
          <div key={product.id} className="border p-4 rounded-lg shadow-md">
            <img src={product.image} alt={product.name} className="w-full h-[150px] object-cover mb-3" />
            <h2 className="text-xl font-semibold mb-2">{product.name}</h2>
            <p className="text-gray-700 mb-1">Category: {product.category}</p>
            <p className="text-gray-700 mb-1">Price: ${product.price}</p>
            <button className="mt-3 bg-blue-500 text-white px-4 py-2 rounded-lg">Add to Cart</button>
          </div>
        ))}
      </div>

      {/* Pagination */}
      {renderPagination()}
    </div>
  );
};

export default ShopPage;
